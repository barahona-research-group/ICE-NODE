#PBS -lselect=1:ncpus=8:mem=96gb

#PBS -lwalltime=500:0:0



# Setup environement using .bashrc
source $HOME/.bashrc

# Input Environment Variables:
# $STUDY_TAG: Name of the Git branch or tag. If optuna job is executing, the study tag will be used for the optuna study name. Example: v0.2.25
# $DATA_TAG: Name of the data tag. Example: M3
# $EMB: Embedding module label. Example: gram

# Clone repository and checkout to the given tag name.
git clone git@github.com:A-Alaa/ICE-NODE.git $TMPDIR/ICE-NODE --branch $STUDY_TAG --single-branch  --depth 1 

cd $TMPDIR/ICE-NODE

$HOME/anaconda3/condabin/conda activate $HOME/GP/env/icenode-dev

# Load modules


# Input data and output configuration
export DATA_DIR="$HOME/GP/ehr-data"
OUTPUT_DIR=""
if [[ "$DATA_TAG" == "M3" ]]; then
  OUTPUT_DIR="$HOME/GP/ehr-data/icenode-m3-exp"
else
  OUTPUT_DIR="$HOME/GP/ehr-data/icenode-m4-exp"
fi


# Run program

export JAX_PLATFORM_NAME="cpu"

$HOME/GP/env/icenode-dev/bin/python -m icenode.cli.optuna_multi \
--output-dir $OUTPUT_DIR \
--dataset $DATA_TAG \
--study-tag $STUDY_TAG \
--emb $EMB \
--model $MODEL \
--optuna-store $OPTUNA_STORE \
--mlflow-store $MLFLOW_STORE \
--trials-time-limit 500 \
--num-processes 4 \
--num-trials 30 \
--training-time-limit 400 \
--job-id "$PBS_JOBID $PBS_ARRAY_INDEX"


#mkdir $PBS_O_WORKDIR/$PBS_JOBID
#cp * $PBS_O_WORKDIR/$PBS_JOBID
